plugins {
    id 'java'
    id 'io.qameta.allure' version '2.12.0'
}

group = 'com.saucedemo'
version = '1.0-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

ext {
    seleniumVersion = '4.21.0'
    cucumberVersion = '7.18.0'
    testngVersion = '7.10.2'
    allureVersion = '2.27.0'
    webdrivermanagerVersion = '5.8.0'
    slf4jVersion = '2.0.13'
    assertjVersion = '3.26.0'
}

dependencies {
    // Selenium
    testImplementation "org.seleniumhq.selenium:selenium-java:${seleniumVersion}"
    testImplementation "io.github.bonigarcia:webdrivermanager:${webdrivermanagerVersion}"

    // TestNG
    testImplementation "org.testng:testng:${testngVersion}"

    // Cucumber
    testImplementation "io.cucumber:cucumber-java:${cucumberVersion}"
    testImplementation "io.cucumber:cucumber-testng:${cucumberVersion}"

    // Allure
    testImplementation "io.qameta.allure:allure-testng:${allureVersion}"
    testImplementation "io.qameta.allure:allure-cucumber7-jvm:${allureVersion}"

    // Logging
    testImplementation "org.slf4j:slf4j-api:${slf4jVersion}"
    testImplementation "org.slf4j:slf4j-simple:${slf4jVersion}"

    // Slack
    testImplementation 'com.slack.api:slack-api-client:1.36.1'

    // Utilities
    testImplementation "org.assertj:assertj-core:${assertjVersion}"
}

test {
    useTestNG {
        listeners << 'com.saucedemo.listeners.TestSuiteListener'
    }

    systemProperty 'allure.results.directory', 'build/allure-results'

    // Enable detailed logging to see what's happening
    testLogging {
        events "passed", "skipped", "failed", "started"
        exceptionFormat "full"
        showStandardStreams = true
    }

//    delete 'build/allure-results'

//    // Show test execution details
//    beforeTest { descriptor ->
//        logger.lifecycle("Running test: $descriptor")
//    }

//    // Show results summary
//    afterSuite { desc, result ->
//        if (!desc.parent) {
//            logger.lifecycle("Tests run: ${result.testCount}, " +
//                    "Passed: ${result.successfulTestCount}, " +
//                    "Failed: ${result.failedTestCount}, " +
//                    "Skipped: ${result.skippedTestCount}")
//        }
//    }
}

allure {
    version = allureVersion
}

// Task to generate static Allure report
task generateAllureReport {
    dependsOn test
    doLast {
        exec {
            commandLine 'allure', 'generate', 'build/allure-results', '--clean', '-o', 'build/allure-report'
        }
    }
}

// Task to open static report in browser
task openAllureReport {
    dependsOn generateAllureReport
    doLast {
        exec {
            commandLine 'allure', 'open', 'build/allure-report', '--port', '4444'
        }
    }
}

tasks.withType(JavaCompile) {
    options.compilerArgs += ["-Xlint:deprecation"]
}